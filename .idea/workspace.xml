<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1df7e94f-2bec-4f86-812c-57166e876e66" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/public/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/public/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/App.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/Main.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/Main.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/appReducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/appSelector.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/store.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/store.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/AddItemForm/AddItemForm.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/components/AddItemForm/AddItemForm.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/EditableSpan/EditableSpan.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/components/EditableSpan/EditableSpan.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/ErrorSnackbar/ErrorSnackbar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/components/ErrorSnackbar/ErrorSnackbar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/Header/Header.style.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/Header/Header.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/components/Header/Header.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/MenuButton/MenuButton.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/components/MenuButton/MenuButton.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/components/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/components/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/enums/enums.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/enums/enums.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/enums/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/enums/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/hooks/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/hooks/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/hooks/useAppDispatch.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/hooks/useAppDispatch.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/hooks/useAppSelector.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/hooks/useAppSelector.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/instance/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/instance/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/instance/instance.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/instance/instance.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/theme/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/theme/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/theme/theme.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/theme/theme.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/types/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/types/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/types/types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/types/types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/utils/error-utils.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/api/tasksAPI.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/api/tasksAPI.types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/api/todolistsAPI.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/api/todolistsAPI.types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/model/tasksReducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/model/tasksSelector.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/model/todolistsReducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/model/todolistsSelectors.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolist/FilterTasksButtons/FilterTasksButtons.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolist/Tasks/Task/Task.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolist/Tasks/Tasks.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolist/Todolist.styles.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolist/Todolist.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolist/TodolistTitle/TodolistTitle.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/ui/Todolists/Todolists.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/react-app-env.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/react-app-env.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/reportWebVitals.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/setupTests.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/setupTests.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/todolist-wednesday.zip" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript JSX File" />
        <option value="CSS File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "Daniyel-Tkachuk"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "git@github.com:Daniyel-Tkachuk/todolist-project.git",
    "accountId": "9b013ab1-adc4-494a-ba58-3beaf3ddd87b"
  }
}]]></component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/features/auth/ui/Login/Login.tsx" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2oD1vXCB3sRyi5kA9DWZLVC0sLY" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "F:/IT-Incubator/todolist-project",
    "list.type.of.created.stylesheet": "CSS",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "prettier.import.notification.dismissed": "true",
    "prettierjs.PrettierConfiguration.Package": "F:\\WEB\\16-todolist\\node_modules\\prettier",
    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable",
    "ts.external.directory.path": "F:\\IT-Incubator\\todolist-project\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-WS-242.23726.96" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1df7e94f-2bec-4f86-812c-57166e876e66" name="Changes" comment="" />
      <created>1730389563007</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1730389563007</updated>
      <workItem from="1730389564087" duration="1778000" />
      <workItem from="1730392162657" duration="1125000" />
      <workItem from="1730430927480" duration="1670000" />
      <workItem from="1730432653420" duration="1002000" />
      <workItem from="1730474948251" duration="149000" />
      <workItem from="1730475103649" duration="1110000" />
      <workItem from="1730477463527" duration="1805000" />
      <workItem from="1730479339841" duration="335000" />
      <workItem from="1730479686579" duration="3151000" />
      <workItem from="1730570209392" duration="7000" />
      <workItem from="1730610212485" duration="8547000" />
      <workItem from="1730645281820" duration="5367000" />
      <workItem from="1730689554794" duration="3255000" />
      <workItem from="1730771408037" duration="4707000" />
      <workItem from="1730865676664" duration="365000" />
      <workItem from="1730866384176" duration="977000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".env" />
  </component>
</project>